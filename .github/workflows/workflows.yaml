name: Basketball Reference Web Scraper

on:
  release:
    types: [published]
  push:
    branches:
      - v4
  pull_request:
  schedule:
    - cron: '0 22 * * *'

jobs:
  build:
    runs-on:  ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        python-version: [3.7, 3.8]
        exclude:
          # there's some issue when installing lxml on linux and windows
          - os: windows-latest
            python-version: 3.8
          - os: ubuntu-latest
            python-version: 3.8
          # running into test failures when running more than 5 tests on the matrix
          - os: macos-latest
            python-version: 3.7
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}
      - name: Set Up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install wheel
          pip install -r requirements.txt
      - name: Test With Pytest
        run: |
          coverage run -m unittest discover
      - name: Upload Coverage To Codecov
        uses: codecov/codecov-action@v1
  docs:
    name: Publish Documentation
    runs-on: macos-latest
    needs: build
    if: ${{ github.ref == 'refs/heads/v4' }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}
      - name: Set Up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install wheel
          pip install -r requirements.txt
      - name: Set Git Configuration
        run: |
          REMOTE="https://${GH_TOKEN}@github.com/${GITHUB_REPOSITORY}"
          git config --global user.name "${GH_NAME}"
          git config --global user.email "${GH_EMAIL}"
          git remote set-url origin ${REMOTE}
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GH_NAME: ${{ secrets.GH_NAME }}
          GH_EMAIL: ${{ secrets.GH_EMAIL }}
      - name: Deploy To GitHub Pages
        run: mkdocs gh-deploy --clean --force
